// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Rentals.Entities;

namespace Rentals.DAL
{
    internal partial class eTools2021Context : DbContext
    {
        public eTools2021Context()
        {
        }

        public eTools2021Context(DbContextOptions<eTools2021Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Coupon> Coupons { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Rental> Rentals { get; set; }
        public virtual DbSet<RentalDetail> RentalDetails { get; set; }
        public virtual DbSet<RentalEquipment> RentalEquipments { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Customer>(entity =>
            {
                entity.Property(e => e.ContactPhone).IsFixedLength();

                entity.Property(e => e.PostalCode).IsFixedLength();

                entity.Property(e => e.ProvinceID).IsFixedLength();
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.ContactPhone).IsFixedLength();

                entity.Property(e => e.PostalCode).IsFixedLength();
            });

            modelBuilder.Entity<Rental>(entity =>
            {
                entity.Property(e => e.PaymentType).IsFixedLength();

                entity.HasOne(d => d.Coupon)
                    .WithMany(p => p.Rentals)
                    .HasForeignKey(d => d.CouponID)
                    .HasConstraintName("FK_RentalsCoupons_CouponID");

                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.Rentals)
                    .HasForeignKey(d => d.CustomerID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RentalsCustomers_CustomerID");

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Rentals)
                    .HasForeignKey(d => d.EmployeeID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RentalsEmployees_EmployeeID");
            });

            modelBuilder.Entity<RentalDetail>(entity =>
            {
                entity.HasOne(d => d.RentalEquipment)
                    .WithMany(p => p.RentalDetails)
                    .HasForeignKey(d => d.RentalEquipmentID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RentalDetailsRentalEquipemnt_RentalEquipmentID");

                entity.HasOne(d => d.Rental)
                    .WithMany(p => p.RentalDetails)
                    .HasForeignKey(d => d.RentalID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RentalDetailsRentals_RentalID");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}